{"version":3,"sources":["Main.js","LightsOut/Cell.js","LightsOut/Board.js","LightsOut/LightsOut.js","TodoList/TodoList.js","TodoList/TodoForms.js","TodoList/TodoListApp.js","GeneralFunction/useToggleState.js","GeneralFunction/useInputChange.js","TodoListHooked/TodoList.js","TodoListHooked/TodoForms.js","TodoListHooked/TodoListHookedApp.js","TodoListHooked/useTodoState.js","BlogPost/Post.js","BlogPost/BlogPost.js","Comment/MessageForm.js","Comment/redux/actions.js","Comment/redux/constants.js","Comment/ResponseForm.js","Comment/ResponseList.js","Comment/ResponseApp.js","Comment/hooks/UseResponseState.js","Comment/Message.js","Comment/MessageBoard.js","Comment/Comment.js","MessageBox/MessageList.js","MessageBox/MessageText.js","MessageBox/example.js","MessageBox/MessageBox.js","MessageBox/hooks/UseMessageState.js","MessageBox/hooks/UseClickToDir.js","Comment/redux/reducers.js","Header.js","App.js","serviceWorker.js","index.js","headshot.png"],"names":["Main","className","style","top","transform","backgroundColor","width","src","headshot","color","fontSize","lineHeight","Cell","number","boxes","changeColor","col","boxlist","map","el","i","onClick","key","id","animation","Math","round","random","Board","props","bind","state","win","event","coor","target","split","box","this","y","parseInt","x","flipCell","every","row","cell","setState","console","log","flat","filter","length","alert","textAlign","margin","Component","generatenewboxes","Array","fill","LightsOut","restart","position","left","zIndex","handleleave","right","cursor","uuidv4","href","rel","TodoList","handleChange","name","value","handleEdit","edit","handleDoneSubmit","submitDate","EditTodo","parentNode","task","date","DeleteTodo","border","onChange","TodoForms","handleSubmit","preventDefault","UpdateTodo","OnHandleChange","onSubmit","textDecoration","type","placeholder","TodoListApp","item","todo","eventid","newState","editTarget","findIndex","edited","temptodo","regexp","RegExp","ele","match","height","exact","to","initialValue","useState","setValue","useToggleState","editValue","ToggleState","useInputChange","taskValue","TaskHandleChange","dateValue","DateHandleChange","AddTodo","TaskReset","DateReset","TodoListHookedApp","setTodoState","newTask","useTodoState","colors","Fashion","LifeStyle","Health","Logic","Post","handlehover","hover","userId","title","body","tag","onMouseEnter","onMouseLeave","opacity","transition","data","searchwithtagname","overflow","maxWidth","textOverflow","display","axios","require","faker","faketag","floor","BlogPost","handleClick","getPosts","searcharea","textContent","post","prevY","scrollRef","React","createRef","observer","IntersectionObserver","handleObserver","root","rootMargin","threshold","observe","entities","boundingClientRect","currentPostNum","get","catch","err","message","response","updatedPosts","concat","slice","forEach","element","findName","filtered","toLowerCase","includes","toLocaleLowerCase","p","minHeight","borderRadius","class","verticalAlign","ref","defaultProps","numPost","MessageTextField","styled","TextField","maxHeight","padding","MessageButton","Button","MessageForm","Container","borderBottomStyle","HandleChange","textArea","HandleSubmit","OnSubmit","borderBottom","variant","rows","multiline","label","connect","dispatch","text","payload","AddMessage","ResponseForm","AddResponse","ToggleRespond","ResetResponse","float","ResponseList","DeleteResponse","responsesState","ResponseApp","respond","setNewResponses","uuid","UseResponseState","borderTop","replyButton","bottom","MessageContainer","ContentContainer","wordRrap","Message","HandleDelete","OnDeleteMessage","MessageBoard","flexDirection","flexGrow","MyCard","Card","background","Comment","ListContainer","ListHeader","InfoContainer","MessageList","SetMessageStateWithLink","example","SortByRecentDate","SortByOlderDate","isToggled","ToggleSort","activeClassName","direction","fontWeight","from","whiteSpace","letterSpacing","MessageTextContainer","TextHeader","TextTitle","Typography","MessageText","MessageBox","messageState","SetMessageState","sorted","sort","a","b","Date","UseMessageState","clickToMessageState","UseClickToDir","appContainer","maxidth","overflowY","path","render","initialMessageState","Header","listStyle","commentStore","createStore","action","addedMessage","editedMessage","editedText","deletedMessage","App","document","querySelector","store","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.0ee2af83.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport headshot from './headshot.png';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className='mainfont mainbackground'>\r\n      {' '}\r\n      <div\r\n        className='container text-center position-relative p-5'\r\n        style={{\r\n          top: '50%',\r\n          transform: 'translate(0,-50%)',\r\n          backgroundColor: 'rgba(0,0,0,0.3)',\r\n        }}\r\n      >\r\n        <div className='m-auto p-0 position-relative headshot'>\r\n          <img width='100%' src={headshot}></img>\r\n        </div>\r\n        <h1\r\n          className='blogpostfont'\r\n          style={{ color: 'white', fontSize: '60px' }}\r\n        >\r\n          Welcome!\r\n        </h1>\r\n        <h2\r\n          className='blogpostfont'\r\n          style={{ color: 'white', lineHeight: '2em' }}\r\n        >\r\n          {' '}\r\n          Here are some demonstrations of my projects\r\n        </h2>\r\n        <h2 className='blogpostfont' style={{ color: 'white' }}>\r\n          {' '}\r\n          Feel free to look around and click everything\r\n        </h2>\r\n        <h2 className='m-3 blogpostfont' style={{ color: 'white' }}>\r\n          You can click the navigation bar up here to check it out!\r\n          <br />\r\n          <br />\r\n          Everything on this site is made with <u>React.js</u> and{' '}\r\n          <u>React Router</u>!\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport './Cell.css';\r\n\r\nconst Cell = ({ number, boxes, color, changeColor, col }) => {\r\n  function randomcolor() {\r\n    if (Math.round(Math.random() * 1) > 0) {\r\n      return 'blueandpink 1.5s ease-in-out infinite alternate';\r\n    } else {\r\n      return 'pinkandblue 1.5s ease-in-out infinite alternate';\r\n    }\r\n  }\r\n  const boxlist = boxes.map((el, i) => {\r\n    return (\r\n      <div\r\n        onClick={changeColor}\r\n        key={col + i}\r\n        id={col + i}\r\n        style={{\r\n          animation: `${el == 0 ? 'null' : randomcolor()}`,\r\n          backgroundColor: `${el == 0 ? 'black' : '#61a0f1'}`,\r\n        }}\r\n        className='cell'\r\n      ></div>\r\n    );\r\n  });\r\n\r\n  return <div>{boxlist}</div>;\r\n};\r\n\r\nexport default Cell;\r\n","import React, { Component } from 'react';\r\nimport Cell from './Cell';\r\nimport './Board.css';\r\n\r\nclass Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeColor = this.changeColor.bind(this);\r\n    this.state = {\r\n      number: '25',\r\n      boxes: this.props.boxes,\r\n      win: false,\r\n    };\r\n  }\r\n\r\n  changeColor(event) {\r\n    // First step:capture the coordinates of the target box\r\n    const targetId = event.target.id;\r\n    const coor = targetId.split('');\r\n    const box = this.state.boxes;\r\n    const y = parseInt(coor[0]);\r\n    const x = parseInt(coor[1]);\r\n    const newBoxesValue = [...this.state.boxes];\r\n    // Second step: make sure boxes around are inside the board\r\n    function flipCell(y, x) {\r\n      if (x >= 0 && x < 5 && y >= 0 && y < 5) {\r\n        box[y][x] = !box[y][x];\r\n      }\r\n    }\r\n\r\n    flipCell(y, x); //Flip initial cell\r\n    flipCell(y, x - 1); //flip left\r\n    flipCell(y, x + 1); //flip right\r\n    flipCell(y - 1, x); //flip below\r\n    flipCell(y + 1, x); //flip above\r\n    let win = box.every((row) => row.every((cell) => !cell));\r\n    // send newboxes to state\r\n    this.setState({\r\n      boxes: box,\r\n      win: win,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //just a small alert if you win the game\r\n    console.log(this.state.boxes.flat().filter((el) => el == false).length);\r\n    if (this.state.win == true) {\r\n      alert('congrats u win');\r\n    }\r\n    return (\r\n      <div style={{ textAlign: 'center' }}>\r\n        <div style={{ textAlign: 'center', width: 'auto', margin: 'auto' }}>\r\n          <Cell\r\n            boxes={this.state.boxes[0]}\r\n            col='0'\r\n            changeColor={this.changeColor}\r\n          />\r\n          <Cell\r\n            boxes={this.state.boxes[1]}\r\n            col='1'\r\n            changeColor={this.changeColor}\r\n          />\r\n          <Cell\r\n            boxes={this.state.boxes[2]}\r\n            col='2'\r\n            changeColor={this.changeColor}\r\n          />\r\n          <Cell\r\n            boxes={this.state.boxes[3]}\r\n            col='3'\r\n            changeColor={this.changeColor}\r\n          />\r\n          <Cell\r\n            boxes={this.state.boxes[4]}\r\n            col='4'\r\n            changeColor={this.changeColor}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react';\r\nimport Board from './Board';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nfunction generatenewboxes() {\r\n  return new Array(5).fill('').map((el) => {\r\n    return new Array(5).fill().map((el) => {\r\n      return Math.random() >= 0.5;\r\n    });\r\n  });\r\n}\r\n\r\n/** Simple app that just shows the LightsOut game. */\r\nclass LightsOut extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      boxes: generatenewboxes(),\r\n    };\r\n    this.restart = this.restart.bind(this);\r\n  }\r\n  restart = () => {\r\n    this.setState({\r\n      boxes: generatenewboxes(),\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        className='App p-2 m-auto lightsout'\r\n        style={{ backgroundColor: 'black' }}\r\n      >\r\n        <div\r\n          id='popup'\r\n          className=' p-5'\r\n          style={{\r\n            width: '400px',\r\n            position: 'absolute',\r\n            textAlign: 'center',\r\n            top: '50%',\r\n            left: '5%',\r\n            transform: 'translate(0,-50%)',\r\n            zIndex: '99',\r\n            backgroundColor: 'rgba(255, 255, 255,.8)',\r\n          }}\r\n        >\r\n          {' '}\r\n          <span\r\n            onClick={this.props.handleleave}\r\n            className='p-2'\r\n            style={{\r\n              position: 'absolute',\r\n              right: '1%',\r\n              top: '1%',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            X\r\n          </span>\r\n          This is a LightsOut Game, turning off all the lights to win the game!{' '}\r\n          <br /> You can click on each block and see how they change\r\n          <br /> 這是一個關燈遊戲，把所有的燈都關掉就獲勝!\r\n          <br />\r\n          可以觀察一下方塊之間是如何進行互動的\r\n          <br />\r\n          而底下也有原始碼可以參考\r\n        </div>\r\n        <h1 className='lightsoutfont text-center p-5'>Lights Out Game! </h1>\r\n        <div\r\n          className='container p-2'\r\n          style={{ backgroundColor: '#ECF593', width: 'max-content' }}\r\n        >\r\n          <Board boxes={this.state.boxes} key={uuidv4()} />\r\n        </div>\r\n        <button\r\n          onClick={this.restart}\r\n          className='d-block mx-auto my-5 btn p-3 lightsoutbuttons'\r\n          style={{ backgroundColor: '#61a0f1' }}\r\n        >\r\n          Restart!{' '}\r\n        </button>{' '}\r\n        <a\r\n          href='https://github.com/changexd/portfolio/tree/main/src/LightsOut'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <button\r\n            className='d-block  mx-auto my-5 btn p-3 lightsoutbuttons '\r\n            style={{ backgroundColor: '#ff4da6' }}\r\n          >\r\n            Click me for Source Code!\r\n          </button>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LightsOut;\r\n","import React, { Component } from 'react';\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Inherit states from parent\r\n    this.state = {\r\n      task: this.props.task,\r\n      date: this.props.date,\r\n      edit: false,\r\n      id: this.props.id,\r\n    };\r\n    //Don't forget to bind function\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.handleDoneSubmit = this.handleDoneSubmit.bind(this);\r\n  }\r\n  //Using computed property name so we don't have to create new functions\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  //switch for edit\r\n  handleEdit = () => {\r\n    this.setState({ edit: !this.state.edit });\r\n  };\r\n  //send data of this child state to parent\r\n  handleDoneSubmit = (event) => {\r\n    const submitDate = this.state;\r\n    this.setState({ edit: !this.state.edit });\r\n    delete submitDate.edit;\r\n    this.props.EditTodo(event.target.parentNode.id, submitDate);\r\n  };\r\n  render() {\r\n    if (this.state.edit == false) {\r\n      return (\r\n        <div className='container my-3'>\r\n          <div\r\n            id={this.state.date}\r\n            className='row px-3 py-2'\r\n            style={{\r\n              backgroundColor: 'rgba(152, 204, 242,.4)',\r\n            }}\r\n          >\r\n            <div className='d-inline-block   col-5 p-2 m-auto section'>\r\n              <p className='m-2 todofont' style={{ color: 'white' }}>\r\n                {this.state.task}\r\n              </p>\r\n            </div>\r\n            <div className='d-inline-block col-5 p-2 m-auto section'>\r\n              <p className='m-2 todofont' style={{ color: 'white' }}>\r\n                {this.state.date}\r\n              </p>\r\n            </div>\r\n            <div\r\n              id={this.state.id}\r\n              className='d-inline-block   col-1 p-2 m-auto section'\r\n            >\r\n              <p\r\n                className='m-2 todofont'\r\n                style={{ color: 'white', cursor: 'pointer' }}\r\n                onClick={this.props.DeleteTodo}\r\n              >\r\n                x\r\n              </p>\r\n            </div>\r\n            <div className='d-inline-block col-1 p-2 m-auto section'>\r\n              <p\r\n                className='m-2 todofont'\r\n                style={{ color: 'white', cursor: 'pointer' }}\r\n                onClick={this.handleEdit}\r\n              >\r\n                edit\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className='container my-3 '>\r\n          <div id={this.state.id}>\r\n            <form\r\n              className='row px-3 py-2'\r\n              style={{\r\n                backgroundColor: 'rgba(152, 204, 242,.4)',\r\n              }}\r\n            >\r\n              <div\r\n                className='d-inline-block col-5 p-2 m-auto section'\r\n                style={{ width: 'auto' }}\r\n              >\r\n                <input\r\n                  className='todofont'\r\n                  style={{\r\n                    width: 'auto',\r\n                    backgroundColor: 'transparent',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                  }}\r\n                  name='task'\r\n                  value={this.state.task}\r\n                  onChange={this.handleChange}\r\n                ></input>\r\n              </div>\r\n              <div\r\n                className='d-inline-block col-5 p-2 m-auto section '\r\n                style={{ width: 'auto' }}\r\n              >\r\n                <input\r\n                  className='todofont'\r\n                  style={{\r\n                    backgroundColor: 'transparent',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                  }}\r\n                  name='date'\r\n                  value={this.state.date}\r\n                  onChange={this.handleChange}\r\n                ></input>\r\n              </div>\r\n              <div\r\n                id={this.state.id}\r\n                className='d-inline-block col-1 p-2 m-auto section'\r\n              >\r\n                <p\r\n                  className='m-2 todofont'\r\n                  onClick={this.props.DeleteTodo}\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n                  x\r\n                </p>\r\n              </div>\r\n              <div\r\n                id={this.state.id}\r\n                className='d-inline-block col-1 p-2 m-auto section'\r\n              >\r\n                <p\r\n                  className='m-2 todofont'\r\n                  onClick={this.handleDoneSubmit}\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n                  done!\r\n                </p>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass TodoForms extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Using uuid to generate a unique key\r\n    this.state = { task: '', date: '', id: uuidv4() };\r\n    this.OnHandleChange = this.OnHandleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleSubmit = (event) => {\r\n    //remember to use preventDefault to stop refreshing site each time we call the function\r\n    event.preventDefault();\r\n    this.state.task == '' || this.state.date == ''\r\n      ? alert('you should not create an empty list!')\r\n      : this.props.UpdateTodo(this.state);\r\n\r\n    this.setState({ task: '', date: '', id: uuidv4() });\r\n  };\r\n  //Computed property name\r\n  OnHandleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label\r\n            className='d-block todofont'\r\n            style={{\r\n              margin: '15px',\r\n              color: 'white',\r\n              textDecoration: 'underline',\r\n            }}\r\n          >\r\n            Start Creating a Task!\r\n          </label>\r\n          <input\r\n            name='task'\r\n            className='p-3 m-auto'\r\n            onChange={this.OnHandleChange}\r\n            style={{ margin: '15px' }}\r\n            type='text'\r\n            placeholder='Task Here!'\r\n            value={this.state.task}\r\n          ></input>\r\n          <input\r\n            name='date'\r\n            className='p-3'\r\n            onChange={this.OnHandleChange}\r\n            style={{ margin: '15px' }}\r\n            type='text'\r\n            placeholder='Date Here!'\r\n            value={this.state.date}\r\n          ></input>\r\n          <button\r\n            className='btn btn-default todofont p-3'\r\n            style={{\r\n              margin: 'auto',\r\n              color: 'white',\r\n              backgroundColor: 'rgba(152, 204, 242,.4)',\r\n            }}\r\n          >\r\n            Create!\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoForms;\r\n","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport TodoList from './TodoList';\r\nimport TodoForms from './TodoForms';\r\n\r\nclass TodoListApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todo: [\r\n        {\r\n          task: 'Become a React.js developer',\r\n          date: '2020/10/30',\r\n          id: 'example',\r\n        },\r\n        {\r\n          task: 'Work in an awesome company!',\r\n          date: '2020/11/30',\r\n          id: 'example1',\r\n        },\r\n      ],\r\n    };\r\n    this.UpdateTodo = this.UpdateTodo.bind(this);\r\n    this.DeleteTodo = this.DeleteTodo.bind(this);\r\n  }\r\n  UpdateTodo = (item) => {\r\n    this.setState({todo: [...this.state.todo, item]});\r\n  };\r\n  //find out this component and change its state\r\n  EditTodo = (eventid, newState) => {\r\n    const editTarget = this.state.todo.findIndex(\r\n      (target) => target.id === eventid\r\n    );\r\n    const edited = newState;\r\n    const temptodo = [...this.state.todo];\r\n    temptodo[editTarget] = edited;\r\n    this.setState({todo: temptodo});\r\n  };\r\n  //using regexp to find the target(regexp is unecessary though, just wanted to practice)\r\n  DeleteTodo = (event) => {\r\n    const regexp = new RegExp(event.target.parentNode.id, 'g');\r\n    const temptodo = this.state.todo.filter((ele) => !ele.id.match(regexp));\r\n    this.setState({todo: temptodo});\r\n    console.log(this.state.todo);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className='App todobackground p-5 todolist'>\r\n        <div\r\n          className=' p-5'\r\n          id='popup'\r\n          style={{\r\n            width: '400px',\r\n            position: 'absolute',\r\n            textAlign: 'center',\r\n            top: '50%',\r\n            left: '5%',\r\n            transform: 'translate(0,-50%)',\r\n            zIndex: '99',\r\n            backgroundColor: 'rgba(255, 255, 255,.4)',\r\n          }}\r\n        >\r\n          {' '}\r\n          <span\r\n            onClick={this.props.handleleave}\r\n            className='p-2'\r\n            style={{\r\n              position: 'absolute',\r\n              right: '1%',\r\n              top: '1%',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            X\r\n          </span>\r\n          This is a demonstration of how a child state passes to its parent{' '}\r\n          <br /> You can try creating a new task and edit it or even delete it\r\n          just like you normally do on Facebook!\r\n          <br />{' '}\r\n          這是用來展示child如何將state傳送至parent，你可以創建一個新的項目，並按下X或是edit去做如同臉書留言般即時的更動!\r\n          <br />\r\n          <br />\r\n          而底下也有原始碼與medium詳解可以閱讀 點擊Hooked來看利用React Hook\r\n          製作的吧!\r\n        </div>\r\n        <div\r\n          className='m-auto   my-3 p-0 position-relative todoform'\r\n          style={{}}\r\n        >\r\n          <h1 className='text-center todofont p-3 todotitle'>Todo List</h1>\r\n          <div className='overflow-auto' style={{height: '400px'}}>\r\n            {this.state.todo.map((el, i) => {\r\n              return (\r\n                <TodoList\r\n                  key={el.id}\r\n                  task={el.task}\r\n                  date={el.date}\r\n                  DeleteTodo={this.DeleteTodo}\r\n                  id={el.id}\r\n                  EditTodo={this.EditTodo}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className='m-auto container'>\r\n            <TodoForms UpdateTodo={this.UpdateTodo} />\r\n          </div>\r\n        </div>\r\n        <div className='container text-center '>\r\n          {' '}\r\n          <a\r\n            href='https://github.com/changexd/portfolio/tree/main/src/TodoList'\r\n            style={{color: 'white'}}\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <button\r\n              href='https://github.com/changexd/portfolio/tree/main/src/TodoList'\r\n              className='btn my-5 p-4 todofont section todobtn'\r\n            >\r\n              Click me for the source code!\r\n            </button>\r\n          </a>{' '}\r\n          <a\r\n            href='https://medium.com/@darrenwang_1096/利用react-js-state做出可即時更改的todo-list-467c0f28eea8'\r\n            style={{color: 'white'}}\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <button\r\n              href=''\r\n              className='btn my-5 p-4 todofont section mx-3 todobtn'\r\n            >\r\n              Tutorial\r\n            </button>\r\n          </a>{' '}\r\n          <NavLink exact to='/TodoListHooked'>\r\n            <button\r\n              href=''\r\n              className='btn my-5 p-4 todofont section mx-3 todobtn'\r\n            >\r\n              Hooked\r\n            </button>\r\n          </NavLink>{' '}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoListApp;\r\n","import {useState} from 'react';\r\n\r\nexport default (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const ToggleState = () => setValue(!value);\r\n  return [value, ToggleState];\r\n};\r\n","import {useState} from 'react';\r\n\r\nexport default (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const HandleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  const Reset = () => {\r\n    setValue('');\r\n  };\r\n  return [value, HandleChange, Reset];\r\n};\r\n","import React from 'react';\r\nimport useToggleState from '../GeneralFunction/useToggleState';\r\nimport useInputChange from '../GeneralFunction/useInputChange';\r\n\r\nfunction TodoList({key, task, date, id, EditTodo, DeleteTodo}) {\r\n  const [editValue, ToggleState] = useToggleState(false);\r\n  const [taskValue, TaskHandleChange] = useInputChange(task);\r\n  const [dateValue, DateHandleChange] = useInputChange(date);\r\n  if (editValue === false) {\r\n    return (\r\n      <div className='container my-3'>\r\n        <div\r\n          id={date}\r\n          className='row px-3 py-2'\r\n          style={{\r\n            backgroundColor: 'rgba(152, 204, 242,.4)',\r\n          }}\r\n        >\r\n          <div className='d-inline-block   col-5 p-2 m-auto section'>\r\n            <p className='m-2 todofont' style={{color: 'white'}}>\r\n              {taskValue}\r\n            </p>\r\n          </div>\r\n          <div className='d-inline-block col-5 p-2 m-auto section'>\r\n            <p className='m-2 todofont' style={{color: 'white'}}>\r\n              {dateValue}\r\n            </p>\r\n          </div>\r\n          <div id={id} className='d-inline-block   col-1 p-2 m-auto section'>\r\n            <p\r\n              className='m-2 todofont'\r\n              style={{color: 'white', cursor: 'pointer'}}\r\n              onClick={(event) => {\r\n                DeleteTodo(event);\r\n              }}\r\n            >\r\n              x\r\n            </p>\r\n          </div>\r\n          <div className='d-inline-block col-1 p-2 m-auto section'>\r\n            <p\r\n              className='m-2 todofont'\r\n              style={{color: 'white', cursor: 'pointer'}}\r\n              onClick={ToggleState}\r\n            >\r\n              edit\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className='container my-3 '>\r\n        <div id={id}>\r\n          <form\r\n            className='row px-3 py-2'\r\n            style={{\r\n              backgroundColor: 'rgba(152, 204, 242,.4)',\r\n            }}\r\n          >\r\n            <div\r\n              className='d-inline-block col-5 p-2 m-auto section'\r\n              style={{width: 'auto'}}\r\n            >\r\n              <input\r\n                className='todofont'\r\n                style={{\r\n                  width: 'auto',\r\n                  backgroundColor: 'transparent',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                }}\r\n                name='task'\r\n                value={taskValue}\r\n                onChange={(event) => {\r\n                  TaskHandleChange(event);\r\n                }}\r\n              ></input>\r\n            </div>\r\n            <div\r\n              className='d-inline-block col-5 p-2 m-auto section '\r\n              style={{width: 'auto'}}\r\n            >\r\n              <input\r\n                className='todofont'\r\n                style={{\r\n                  backgroundColor: 'transparent',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                }}\r\n                name='date'\r\n                value={dateValue}\r\n                onChange={(event) => {\r\n                  DateHandleChange(event);\r\n                }}\r\n              ></input>\r\n            </div>\r\n            <div id={id} className='d-inline-block col-1 p-2 m-auto section'>\r\n              <p\r\n                className='m-2 todofont'\r\n                onClick={(event) => {\r\n                  DeleteTodo(event);\r\n                }}\r\n                style={{cursor: 'pointer'}}\r\n              >\r\n                x\r\n              </p>\r\n            </div>\r\n            <div id={id} className='d-inline-block col-1 p-2 m-auto section'>\r\n              <p\r\n                className='m-2 todofont'\r\n                onClick={(event) => {\r\n                  EditTodo(event.target.parentNode.id, {\r\n                    task: taskValue,\r\n                    date: dateValue,\r\n                    id: id,\r\n                  });\r\n                  ToggleState();\r\n                }}\r\n                style={{cursor: 'pointer'}}\r\n              >\r\n                done!\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport useInputChange from '../GeneralFunction/useInputChange';\r\n\r\nfunction TodoForms({AddTodo}) {\r\n  const [task, TaskHandleChange, TaskReset] = useInputChange('');\r\n  const [date, DateHandleChange, DateReset] = useInputChange('');\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          AddTodo({task, date, id: uuidv4()});\r\n          TaskReset();\r\n          DateReset();\r\n        }}\r\n      >\r\n        <label\r\n          className='d-block todofont'\r\n          style={{\r\n            margin: '15px',\r\n            color: 'white',\r\n            textDecoration: 'underline',\r\n          }}\r\n        >\r\n          Start Creating a Task!\r\n        </label>\r\n        <input\r\n          name='task'\r\n          className='p-3 m-auto'\r\n          onChange={(event) => {\r\n            TaskHandleChange(event);\r\n          }}\r\n          style={{margin: '15px'}}\r\n          type='text'\r\n          placeholder='Task Here!'\r\n          value={task}\r\n        ></input>\r\n        <input\r\n          name='date'\r\n          className='p-3'\r\n          onChange={(event) => {\r\n            DateHandleChange(event);\r\n          }}\r\n          style={{margin: '15px'}}\r\n          type='text'\r\n          placeholder='Date Here!'\r\n          value={date}\r\n        ></input>\r\n        <button\r\n          type='submit'\r\n          className='btn btn-default todofont p-3'\r\n          style={{\r\n            margin: 'auto',\r\n            color: 'white',\r\n            backgroundColor: 'rgba(152, 204, 242,.4)',\r\n          }}\r\n        >\r\n          Create!\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForms;\r\n","import React from 'react';\r\nimport TodoList from './TodoList';\r\nimport TodoForms from './TodoForms';\r\nimport useTodoState from './useTodoState';\r\n\r\nfunction TodoListHookedApp() {\r\n  //Generated Example\r\n  const exampleTodo = [\r\n    {task: 'Become a front-end engineer', date: '2020/10/31', id: 'example1'},\r\n    {task: 'Get good at coding', date: '2020/11/31', id: 'example2'},\r\n  ];\r\n  //Pass in exampleTodo as initialState\r\n  const {todo, AddTodo, EditTodo, DeleteTodo} = useTodoState(exampleTodo);\r\n\r\n  return (\r\n    <div className='App todobackground p-5 todolist'>\r\n      <div\r\n        className=' p-5'\r\n        id='popup'\r\n        style={{\r\n          width: '400px',\r\n          position: 'absolute',\r\n          textAlign: 'center',\r\n          top: '50%',\r\n          left: '5%',\r\n          transform: 'translate(0,-50%)',\r\n          zIndex: '99',\r\n          backgroundColor: 'rgba(255, 255, 255,.4)',\r\n        }}\r\n      >\r\n        {' '}\r\n        <span\r\n          className='p-2'\r\n          style={{\r\n            position: 'absolute',\r\n            right: '1%',\r\n            top: '1%',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          X\r\n        </span>\r\n        This is a hooked version of the todolist, you can use react developer\r\n        tool to see it's function!\r\n        <br /> 這裡是套用react Hook後的，可以利用react\r\n        開發人員工具觀察Hook的變化!\r\n        <br />\r\n        <br />\r\n        而底下也有本頁原始碼與套用詳解可以閱讀\r\n      </div>\r\n      <div className='m-auto   my-3 p-0 position-relative todoform'>\r\n        <h1 className='text-center todofont p-3 todotitle'>Todo List</h1>\r\n        <div className='overflow-auto' style={{height: '400px'}}>\r\n          {todo.map((el, i) => {\r\n            return (\r\n              <TodoList\r\n                key={el.id}\r\n                task={el.task}\r\n                date={el.date}\r\n                DeleteTodo={DeleteTodo}\r\n                id={el.id}\r\n                EditTodo={EditTodo}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className='m-auto container'>\r\n          <TodoForms AddTodo={AddTodo} />\r\n        </div>\r\n      </div>\r\n      <div className='container text-center '>\r\n        {' '}\r\n        <a\r\n          href='https://github.com/changexd/portfolio/tree/main/src/TodoListHooked'\r\n          style={{color: 'white'}}\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <button className='btn my-5 p-4 todofont section todobtn'>\r\n            Click me for the source code!\r\n          </button>\r\n        </a>{' '}\r\n        <a\r\n          href='https://medium.com/@darrenwang_1096/利用hook改造todolist-a39c3542d381'\r\n          style={{color: 'white'}}\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <button\r\n            href=''\r\n            className='btn my-5 p-4 todofont section mx-3 todobtn'\r\n          >\r\n            Tutorial\r\n          </button>\r\n        </a>{' '}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoListHookedApp;\r\n","import {useState} from 'react';\r\n\r\nexport default (initialValue) => {\r\n  const [todo, setTodoState] = useState(initialValue);\r\n\r\n  return {\r\n    todo,\r\n    AddTodo: (item) => {\r\n      setTodoState([...todo, item]);\r\n    },\r\n    EditTodo: (target, newTask) => {\r\n      const editTarget = todo.findIndex((item) => item.id === target);\r\n      const edited = newTask;\r\n      const temptodo = [...todo];\r\n      temptodo[editTarget] = edited;\r\n      setTodoState(temptodo);\r\n      console.log(newTask);\r\n    },\r\n    DeleteTodo: (event) => {\r\n      const regexp = new RegExp(event.target.parentNode.id, 'g');\r\n      const temptodo = todo.filter((ele) => !ele.id.match(regexp));\r\n      setTodoState(temptodo);\r\n    },\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\n\r\n// Give different tags different color\r\nlet colors = {\r\n  Fashion: '#81CAF4',\r\n  LifeStyle: '#8AE17A ',\r\n  Health: '#B5F481',\r\n  Logic: '#F4B281',\r\n};\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: this.props.userId,\r\n      title: this.props.title,\r\n      body: this.props.body,\r\n      tag: this.props.tag,\r\n      hover: false,\r\n    };\r\n    this.handlehover = this.handlehover.bind(this);\r\n  }\r\n  handlehover = () => {\r\n    this.setState({ hover: !this.state.hover });\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=' m-5 p-0 m-xs-1 blogpostfont PostContainer'\r\n        onMouseEnter={this.handlehover}\r\n        onMouseLeave={this.handlehover}\r\n      >\r\n        <div\r\n          className='position-absolute '\r\n          style={{\r\n            width: ' 100%',\r\n            height: ' 100%',\r\n            top: '0',\r\n            left: '0',\r\n            border: '10px dashed #21B97B',\r\n            opacity: `${this.state.hover === true ? '100%' : '0%'}`,\r\n            transition: 'ease-in 0.2s',\r\n          }}\r\n        ></div>\r\n        <div className='posthover' style={{ width: '100%', height: '100%' }}>\r\n          <div\r\n            className='tag'\r\n            data={this.props.tag}\r\n            onClick={this.props.searchwithtagname}\r\n            style={{\r\n              backgroundColor: colors[this.state.tag],\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                fontSize: 'auto',\r\n                position: 'relative',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%,-50%)',\r\n              }}\r\n            >\r\n              {this.state.tag}\r\n            </p>\r\n          </div>\r\n\r\n          <div className='p-0 inner position-relative  '>\r\n            <div\r\n              className='p-0'\r\n              style={{\r\n                height: '60%',\r\n                overflow: 'hidden',\r\n                backgroundColor: '#E3E8E6',\r\n                position: 'relative',\r\n              }}\r\n            >\r\n              <img\r\n                width='100%'\r\n                src={`https://robohash.org/${this.state.userId}`}\r\n                className='robots'\r\n              ></img>\r\n            </div>\r\n            <div\r\n              className='p-0'\r\n              style={{\r\n                height: '40%',\r\n                backgroundColor: '#C9CFCC',\r\n                overflow: 'hidden',\r\n              }}\r\n            >\r\n              <p>{this.state.userId}</p>\r\n              <p>{this.state.title}</p>\r\n              <p\r\n                style={{\r\n                  height: 'auto',\r\n                  maxWidth: '100%',\r\n                  overflow: 'hidden',\r\n                  textOverflow: 'ellipsis',\r\n                  display: 'block',\r\n                }}\r\n              >\r\n                {this.state.body}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React, {Component} from 'react';\r\nimport Post from './Post';\r\nconst axios = require('axios');\r\nconst faker = require('faker');\r\n\r\n//Randomly generate Tags for each post\r\nfunction faketag() {\r\n  const randomnumber = Math.floor(Math.random() * 4);\r\n  switch (randomnumber) {\r\n    case 0:\r\n      return 'LifeStyle';\r\n      break;\r\n    case 1:\r\n      return 'Fashion';\r\n      break;\r\n    case 2:\r\n      return 'Health';\r\n      break;\r\n    case 3:\r\n      return 'Logic';\r\n      break;\r\n  }\r\n}\r\n\r\nclass BlogPost extends Component {\r\n  static defaultProps = {\r\n    numPost: 10,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {post: [], searcharea: '', prevY: 0};\r\n    this.scrollRef = React.createRef();\r\n    this.getPosts = this.getPosts.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.searchwithtagname = this.searchwithtagname.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.post.length < 1) {\r\n      this.getPosts();\r\n    }\r\n    var options = {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 1.0,\r\n    };\r\n\r\n    this.observer = new IntersectionObserver(\r\n      this.handleObserver.bind(this),\r\n      options\r\n    );\r\n    this.observer.observe(this.scrollRef);\r\n  }\r\n  handleObserver(entities, observer) {\r\n    const y = entities[0].boundingClientRect.y;\r\n    console.log(y);\r\n    if (this.state.prevY > y) {\r\n      this.getPosts();\r\n    }\r\n    this.setState({prevY: y});\r\n  }\r\n  // Using Axios to fetch API and join the original array in the state.post\r\n  async getPosts() {\r\n    let currentPostNum = this.state.post.length;\r\n    let response = await axios\r\n      .get('https://jsonplaceholder.typicode.com/posts')\r\n      // A very tiny error handling here\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n        this.setState({post: []});\r\n      });\r\n    // This was for loading more posts\r\n    let updatedPosts = this.state.post.concat(\r\n      response.data.slice(currentPostNum, currentPostNum + 10)\r\n    );\r\n    updatedPosts.forEach((element) => {\r\n      element.tag = faketag();\r\n      element.userId = faker.name.findName();\r\n    });\r\n    this.setState({post: updatedPosts});\r\n    console.log(updatedPosts);\r\n  }\r\n  //adding more post with the button\r\n  handleClick = () => {\r\n    this.getPosts();\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({searcharea: event.target.value});\r\n  };\r\n  //This function is for click the tag and search by the tag\r\n  searchwithtagname = (event) => {\r\n    this.setState({searcharea: event.target.textContent});\r\n  };\r\n\r\n  render() {\r\n    // Use array.filter() to display elements that match texts in this.state.searcharea\r\n    const filtered = this.state.post\r\n      .filter((post) => {\r\n        return (\r\n          post.userId\r\n            .toLowerCase()\r\n            .includes(this.state.searcharea.toLocaleLowerCase()) ||\r\n          post.title\r\n            .toLowerCase()\r\n            .includes(this.state.searcharea.toLocaleLowerCase()) ||\r\n          post.tag\r\n            .toLowerCase()\r\n            .includes(this.state.searcharea.toLocaleLowerCase()) ||\r\n          post.body\r\n            .toLowerCase()\r\n            .includes(this.state.searcharea.toLocaleLowerCase())\r\n        );\r\n      })\r\n      .map((p, i) => {\r\n        return (\r\n          <Post\r\n            key={p.id}\r\n            userId={p.userId}\r\n            title={p.title}\r\n            body={p.body}\r\n            tag={p.tag}\r\n            searchwithtagname={this.searchwithtagname}\r\n          />\r\n        );\r\n      });\r\n\r\n    return (\r\n      <div\r\n        className='blogpostbackground'\r\n        style={{backgroundColor: '#88E1AB', minHeight: '1000px'}}\r\n      >\r\n        {' '}\r\n        <div\r\n          id='popup'\r\n          className=' p-5'\r\n          style={{\r\n            width: '400px',\r\n            position: 'fixed',\r\n            textAlign: 'center',\r\n            top: '50%',\r\n            left: '5%',\r\n            transform: 'translate(0,-50%)',\r\n            zIndex: '99',\r\n            backgroundColor: 'rgba(255, 255, 255,.9)',\r\n          }}\r\n        >\r\n          <span\r\n            onClick={this.props.handleleave}\r\n            className='p-2'\r\n            style={{\r\n              position: 'absolute',\r\n              right: '1%',\r\n              top: '1%',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            X\r\n          </span>\r\n          This is a demonstration of how you can make a search function using\r\n          React states. <br /> Try and search something or even click on the tag\r\n          to see the magic!\r\n          <br /> 這個頁面利用了Axios串接假的貼文API，而搜尋則是應用了React\r\n          state的變更進行即時的render，你可以試著搜尋些關鍵字甚至是點擊貼文左上角的小圈圈!\r\n          <br />\r\n          <br />\r\n          而搜尋方塊下方也有原始碼與medium詳解可以閱讀\r\n        </div>\r\n        <div className='container text-center'>\r\n          <h1 className=' p-3 blogpostfont'>Search For the Post!</h1>\r\n\r\n          <label className=' p-3 blogpostfont' style={{fontSize: '25px'}}>\r\n            Search:\r\n          </label>\r\n          <input\r\n            onChange={this.handleChange}\r\n            className='m-auto p-2 blogsearch'\r\n            type='text'\r\n            placeholder='Search for the event'\r\n            style={{borderRadius: '15px', border: '3px solid #31A0C7'}}\r\n            value={this.state.searcharea}\r\n          ></input>\r\n          <div className='d-block'>\r\n            <a\r\n              href='https://github.com/changexd/portfolio/tree/main/src/BlogPost'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n              className=' m-auto w-auto '\r\n            >\r\n              <button\r\n                class='btn  p-3 blogpostfont section m-3'\r\n                style={{backgroundColor: '#31A0C7'}}\r\n              >\r\n                {' '}\r\n                Click here for the source code!\r\n              </button>\r\n            </a>\r\n            <button\r\n              class='btn  p-3 blogpostfont section m-3'\r\n              style={{backgroundColor: '#31A0C7'}}\r\n              onClick={this.handleClick}\r\n            >\r\n              {' '}\r\n              More Posts!\r\n            </button>\r\n            <a\r\n              href='https://medium.com/@darrenwang_1096/利用react-js來做具有搜尋功能的部落格吧-71aaa7b0740d'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n              className=' m-auto w-auto '\r\n            >\r\n              <button\r\n                class='btn  p-3 blogpostfont section m-3'\r\n                style={{backgroundColor: '#31A0C7'}}\r\n              >\r\n                {' '}\r\n                Tutorial\r\n              </button>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className='text-center  p-5'>\r\n          {/* In case of loading too long, the loading section is added */}\r\n          {this.state.post.length < 1 ? (\r\n            <div className='blogpostfont' style={{fontSize: '25px'}}>\r\n              Loading...\r\n              <div class='lds-ring' style={{verticalAlign: 'middle'}}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>{filtered}</div>\r\n          )}\r\n          <div\r\n            ref={(ref) => (this.scrollRef = ref)}\r\n            style={{height: '100px', margin: '30px'}}\r\n          >\r\n            <span>Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BlogPost;\r\n","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport {AddMessage} from './redux/actions';\r\nimport {connect} from 'react-redux';\r\nimport {styled} from '@material-ui/core/styles';\r\n\r\n//again, it's easier to just use Hook, or at least use hooks with redux, due to the time limit, this is gonna be it\r\nconst mapStateToProps = (state) => {\r\n  return {message: state.message};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {OnSubmit: (text) => dispatch(AddMessage(text))};\r\n};\r\nconst MessageTextField = styled(TextField)({\r\n  width: '100%',\r\n  maxHeight: '200px',\r\n  padding: '5px',\r\n  borderRadius: '10px',\r\n});\r\nconst MessageButton = styled(Button)({margin: '10px', display: 'inline-block'});\r\nconst MessageFormContainer = styled(Container)({\r\n  borderBottomStyle: 'solid ',\r\n  border: '3px black',\r\n});\r\nclass MessageForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {textArea: ''};\r\n    this.HandleChange = this.HandleChange.bind(this);\r\n    this.HandleSubmit = this.HandleSubmit.bind(this);\r\n  }\r\n  HandleChange = (event) => {\r\n    this.setState({textArea: event.target.value});\r\n  };\r\n  HandleSubmit = (event) => {\r\n    if (this.state.textArea == '') {\r\n      event.preventDefault();\r\n      alert('留言不可為空白');\r\n    } else {\r\n      event.preventDefault();\r\n      this.props.OnSubmit(this.state.textArea);\r\n      this.setState({textArea: ''});\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container\r\n          style={\r\n            this.props.message.length < 1\r\n              ? {borderBottom: '3px solid black'}\r\n              : {}\r\n          }\r\n        >\r\n          <form onSubmit={this.HandleSubmit}>\r\n            <MessageTextField\r\n              variant='outlined'\r\n              rows='5'\r\n              multiline='true'\r\n              id='standard-basic'\r\n              label='請在此輸入留言...'\r\n              value={this.state.textArea}\r\n              type='text'\r\n              onChange={this.HandleChange}\r\n            />\r\n\r\n            <div style={{textAlign: 'right'}}>\r\n              <MessageButton variant='contained' color='primary' type='submit'>\r\n                留言\r\n              </MessageButton>\r\n            </div>\r\n          </form>\r\n        </Container>\r\n        {this.props.message.length < 1 ? (\r\n          <p style={{color: 'black', padding: '10px'}}> 目前沒有訊息</p>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageForm);\r\n","import {ADD_MESSAGE, EDIT_MESSAGE, DELETE_MESSAGE} from './constants';\r\n\r\n//Message part\r\nexport const AddMessage = (text) => {\r\n  return {type: ADD_MESSAGE, payload: text};\r\n};\r\nexport const EditMessage = (target, editedText) => {\r\n  return {\r\n    type: EDIT_MESSAGE,\r\n    payload: {target: target, editedText: editedText},\r\n  };\r\n};\r\nexport const DeleteMessage = (target) => {\r\n  return {type: DELETE_MESSAGE, payload: target};\r\n};\r\n","export const ADD_MESSAGE = 'ADD_MESSAGE';\r\nexport const EDIT_MESSAGE = 'EDIT_MESSAGE';\r\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE';\r\n","import React from 'react';\r\nimport useInputChange from '../GeneralFunction/useInputChange';\r\nimport UseResponseState from './hooks/UseResponseState';\r\n//Use Hook to connect its response to its parent\r\nfunction ResponseForm({AddResponse, ToggleRespond}) {\r\n  const [response, HandleChange, ResetResponse] = useInputChange('');\r\n\r\n  const responseInput = {\r\n    width: '70%',\r\n    border: '1px solid #9B9B9B',\r\n    borderRadius: '10px',\r\n    padding: '3px',\r\n    textAlign: 'center',\r\n  };\r\n  const responseSubmission = {\r\n    width: '10%',\r\n    backgroundColor: '#DDDDDD',\r\n    border: 'none',\r\n    float: 'right',\r\n    textAlign: 'right',\r\n  };\r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <form\r\n        style={{margin: '10px 0px 10px 0px'}}\r\n        onSubmit={(event) => {\r\n          if (response === '') {\r\n            event.preventDefault();\r\n            alert('Cannot enter empty message');\r\n          } else {\r\n            event.preventDefault();\r\n            AddResponse(response);\r\n            ResetResponse();\r\n            ToggleRespond();\r\n            console.log(response);\r\n          }\r\n        }}\r\n      >\r\n        <input\r\n          style={responseInput}\r\n          placeholder='在此輸入留言...'\r\n          value={response}\r\n          onChange={(event) => HandleChange(event)}\r\n        ></input>{' '}\r\n        <button type='submit' style={responseSubmission}>\r\n          ▶\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResponseForm;\r\n","import React from 'react';\r\nimport uuid from 'react-uuid';\r\n\r\nfunction ResponseList({DeleteResponse, responsesState}) {\r\n  return responsesState.map((response) => {\r\n    return (\r\n      <div key={response.id} style={{padding: '10px'}}>\r\n        {response.text}{' '}\r\n        <p\r\n          id={response.id}\r\n          onClick={(event) => DeleteResponse(event.target.id)}\r\n          style={{float: 'right', cursor: 'pointer'}}\r\n        >\r\n          x\r\n        </p>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nexport default ResponseList;\r\n","import React, {Component} from 'react';\r\nimport ResponseForm from './ResponseForm';\r\nimport ResponseList from './ResponseList';\r\nimport UseResponseState from './hooks/UseResponseState';\r\n//if respond is true return ResponseForm\r\nfunction ResponseApp({respond, ToggleRespond}) {\r\n  //use Hook to handle it's respond and set original state as an empty array, if have time gonna load responses from local storage\r\n  const {AddResponse, DeleteResponse, responsesState} = UseResponseState([]);\r\n\r\n  return (\r\n    <div\r\n      style={responsesState.length < 1 ? {} : {borderTop: '3px solid black'}}\r\n    >\r\n      {respond ? (\r\n        <ResponseForm AddResponse={AddResponse} ToggleRespond={ToggleRespond} />\r\n      ) : null}\r\n      <ResponseList\r\n        DeleteResponse={DeleteResponse}\r\n        responsesState={responsesState}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default ResponseApp;\r\n","import {useState} from 'react';\r\nimport uuid from 'react-uuid';\r\n\r\nexport default (initialValue) => {\r\n  const [responsesState, setNewResponses] = useState(initialValue);\r\n  return {\r\n    responsesState,\r\n    AddResponse: (text) => {\r\n      setNewResponses([...responsesState, {id: uuid(), text: text}]);\r\n    },\r\n    DeleteResponse: (target) => {\r\n      setNewResponses(\r\n        responsesState.filter((response) => response.id !== target)\r\n      );\r\n    },\r\n  };\r\n};\r\n","import React, {Component} from 'react';\r\nimport ResponseApp from './ResponseApp';\r\nimport {connect} from 'react-redux';\r\nimport {DeleteMessage} from './redux/actions';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport {styled} from '@material-ui/core/styles';\r\n\r\n//Each Message has it's own response\r\n\r\n//Not registered to the props because the data is passing down\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {OnDeleteMessage: (event) => dispatch(DeleteMessage(event))};\r\n};\r\nconst replyButton = {\r\n  color: 'white',\r\n  position: 'absolute',\r\n  bottom: '0',\r\n  right: '0',\r\n  margin: '0',\r\n  cursor: 'pointer',\r\n  padding: '5px',\r\n};\r\nconst MessageContainer = styled(Container)({\r\n  width: '100%',\r\n  textAlign: 'left',\r\n  position: 'relative',\r\n  backgroundColor: '#DDDDDD',\r\n  color: 'black',\r\n  padding: '15px',\r\n  borderRadius: '10px',\r\n  margin: '15px 0px 15px 0px',\r\n});\r\nconst ContentContainer = styled(Container)({\r\n  width: '100%',\r\n  maxWidth: '100%',\r\n  minHeight: '150px',\r\n  maxHeight: '250px',\r\n  overflow: 'auto',\r\n  wordRrap: 'break-word',\r\n  position: 'relative',\r\n  padding: '5px',\r\n});\r\n//TODO Message 可以用將這個props的ID傳下去然後在利用Local Storage存取與接取該ID的response\r\nclass Message extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {respond: false};\r\n    this.ToggleRespond = this.ToggleRespond.bind(this);\r\n  }\r\n  //Return a ToggleRespond State for making reply toggelable and pass it down to child\r\n  ToggleRespond = () => {\r\n    this.setState({respond: !this.state.respond});\r\n  };\r\n  HandleDelete = (event) =>\r\n    this.props.OnDeleteMessage(event.target.parentNode.id);\r\n  render() {\r\n    console.log(this.props.message);\r\n    return (\r\n      <MessageContainer id={this.props.message.id}>\r\n        <ContentContainer id={this.props.message.id}>\r\n          <p\r\n            onClick={this.HandleDelete}\r\n            style={{\r\n              float: 'right',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            X\r\n          </p>\r\n          {this.props.message.text}\r\n          <p onClick={this.ToggleRespond} style={replyButton}>\r\n            {' '}\r\n            {this.state.respond ? '取消' : '回覆'}\r\n          </p>\r\n        </ContentContainer>\r\n        <div>\r\n          <ResponseApp\r\n            respond={this.state.respond}\r\n            ToggleRespond={this.ToggleRespond}\r\n          />\r\n        </div>\r\n      </MessageContainer>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Message);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {AddMessage} from './redux/actions';\r\nimport Container from '@material-ui/core/Container';\r\nimport Message from './Message';\r\n//register this child to message prop so it can change it's state using redux\r\nconst mapStateToProps = (state) => {\r\n  return {message: state.message};\r\n};\r\n\r\nclass MessageBoard extends Component {\r\n  render() {\r\n    return (\r\n      <Container\r\n        style={{\r\n          height: 'inherit',\r\n          maxHeight: '60vh',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          overflow: 'hidden',\r\n        }}\r\n      >\r\n        <div style={{flexGrow: '1', overflow: 'auto'}}>\r\n          {this.props.message.map((message) => {\r\n            return <Message message={message} key={message.id} />;\r\n          })}\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(MessageBoard);\r\n","import React, {Component} from 'react';\nimport MessageForm from './MessageForm';\nimport MessageBoard from './MessageBoard';\nimport {connect} from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from '@material-ui/core/Card';\nimport {styled} from '@material-ui/core/styles';\n\n//It's actually better to just use Hook or useContext, but I would like to practice Redux on this, Redux is more suitable for \"Global State\"\nconst MyCard = styled(Card)({\n  background: '#FFFFFF',\n  border: 0,\n  borderRadius: 3,\n  margin: '10px',\n  color: 'white',\n  padding: '15px',\n  width: '60vw',\n  border: 'solid 2px #DDDDDD',\n  display: 'inline-block',\n  position: 'relative',\n  textAlign: 'center',\n  height: 'auto',\n  maxHeight: '80vh',\n});\n\nconst mapStateToProps = (state) => {\n  return {message: state.message};\n};\n\nclass Comment extends Component {\n  render() {\n    return (\n      <div className='text-center container'>\n        <MyCard>\n          <MessageForm />\n          <MessageBoard />\n        </MyCard>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Comment);\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport {styled} from '@material-ui/core/styles';\r\nimport {NavLink} from 'react-router-dom';\r\nimport useToggleState from '../GeneralFunction/useToggleState';\r\n\r\nconst ListContainer = styled(Container)({\r\n  width: '50%',\r\n  height: '100%',\r\n  display: 'inline-block',\r\n  verticalAlign: 'top',\r\n  padding: '0',\r\n  border: '3px solid #9B9B9B',\r\n});\r\nconst ListHeader = styled(Container)({\r\n  width: '100%',\r\n  height: '10%',\r\n  padding: '15px',\r\n  textAlign: 'center',\r\n  borderBottom: '3px solid #9B9B9B',\r\n});\r\n\r\nconst InfoContainer = styled(Container)({\r\n  width: '100%',\r\n  height: '10%',\r\n  padding: '15px',\r\n  textAlign: 'center',\r\n  borderBottom: '3px solid #4A4A4A',\r\n  borderTop: 'none',\r\n  backgroundColor: 'inherit',\r\n});\r\nfunction MessageList({\r\n  SetMessageStateWithLink,\r\n  message,\r\n  example,\r\n  SortByRecentDate,\r\n  SortByOlderDate,\r\n}) {\r\n  const [isToggled, ToggleSort] = useToggleState(false);\r\n  return (\r\n    <ListContainer>\r\n      <ListHeader>\r\n        <p style={{float: 'left'}}>訊息列表</p>\r\n        <p\r\n          onClick={() => {\r\n            isToggled ? SortByOlderDate() : SortByRecentDate();\r\n            ToggleSort();\r\n          }}\r\n          style={{float: 'right', cursor: 'pointer'}}\r\n        >\r\n          時間排序{isToggled ? '最舊↓' : '最新↓'}\r\n        </p>\r\n      </ListHeader>\r\n      {example.map((example) => {\r\n        return (\r\n          <NavLink\r\n            className='test'\r\n            key={example.message}\r\n            exact\r\n            activeClassName='messageActive'\r\n            to={`/MessageBox/${example.direction}`}\r\n          >\r\n            <InfoContainer\r\n              onClick={() => {\r\n                SetMessageStateWithLink(example);\r\n              }}\r\n            >\r\n              <div style={{height: '50%'}}>\r\n                <p\r\n                  style={{\r\n                    fontSize: '17px',\r\n                    fontWeight: 'bold',\r\n                    float: 'left',\r\n                    margin: '0',\r\n                  }}\r\n                >\r\n                  {example.from}\r\n                </p>\r\n                <p style={{float: 'right', margin: '0'}}>{example.date}</p>\r\n              </div>\r\n              <div style={{height: '50%'}}>\r\n                <p\r\n                  style={{\r\n                    textAlign: 'left',\r\n                    margin: '0',\r\n                    textOverflow: 'ellipsis',\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                    whiteSpace: 'nowrap',\r\n                    letterSpacing: '2px',\r\n                  }}\r\n                >\r\n                  {' '}\r\n                  {example.message}\r\n                </p>\r\n              </div>\r\n            </InfoContainer>\r\n          </NavLink>\r\n        );\r\n      })}\r\n    </ListContainer>\r\n  );\r\n}\r\n\r\nexport default MessageList;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport {styled} from '@material-ui/core/styles';\r\nimport {Typography} from '@material-ui/core/';\r\nconst MessageTextContainer = styled(Container)({\r\n  width: '50%',\r\n  height: '100%',\r\n  backgroundColor: '#FFFFFF',\r\n  display: 'inline-block',\r\n  verticalAlign: 'top',\r\n  padding: '0',\r\n});\r\nconst TextHeader = styled(Container)({\r\n  width: '100%',\r\n  height: '10%',\r\n  padding: '15px',\r\n  textAlign: 'left',\r\n  position: 'relative',\r\n});\r\nconst TextTitle = styled(Typography)({\r\n  fontSize: '17px',\r\n  margin: '0',\r\n  position: 'relative',\r\n  top: '50%',\r\n  transform: 'translateY(-50%)',\r\n});\r\nconst ContentContainer = styled(Container)({\r\n  width: '100%',\r\n  height: '90%',\r\n  padding: '15px',\r\n  textAlign: 'left',\r\n  position: 'relative',\r\n  padding: '15px',\r\n  lineHeight: '25px',\r\n  letterSpacing: '2px',\r\n});\r\nfunction MessageText({message, from}) {\r\n  return (\r\n    <MessageTextContainer>\r\n      <TextHeader>\r\n        <TextTitle style={{}}>{from}</TextTitle>\r\n      </TextHeader>\r\n      <ContentContainer>{message}</ContentContainer>\r\n    </MessageTextContainer>\r\n  );\r\n}\r\n\r\nexport default MessageText;\r\n","export const example = [\r\n  {\r\n    from: '訊息A',\r\n    message:\r\n      '這他電，意城人設出關馬們高，從質由靈司可友張也都，作中當的會念了一是人教合如目裡支可招上；形般文無時一畫都大，動流也月他外外有的完。護去力不進例動黃……歷不容：情家作臺媽的遠才關後引少動前事是黃處不大書得：勢實背風則公走什口是象分的廠加作。',\r\n    direction: 'example1',\r\n    date: '2020-01-02',\r\n  },\r\n  {\r\n    from: '訊息B',\r\n    message:\r\n      '灣要麼境線、望就後，流使無前非神腦體：間站一之朋的、題指要色痛裡過你是要女出加投一身力學毛量可舉，小文省銷樹其那親是覺模隊買文道母急險不成去、明然只劇然手：子百此車及訴樣點定國作：知到。    中進一家的英話我從白老全得老腦清來來到長如方天地想最縣食到總運利。',\r\n    direction: 'example2',\r\n    date: '2020-02-04',\r\n  },\r\n  {\r\n    from: '訊息C',\r\n    message:\r\n      '也她子國心致。信害讀內，當一化臺費也護職族其以集向目清長無為百構之文出？種影大在意時入市步不在，山得有商友靜……委化都是片不到存文電沒全現下路由教技各、終來善股多現？會好資把能也然上那、數性晚力可，經念球而可聽他用，片前西我；得的歡，讀青素沒都我地名。',\r\n    direction: 'example3',\r\n    date: '2020-09-02',\r\n  },\r\n  {\r\n    from: '訊息D',\r\n    message:\r\n      '他下件灣時有的，個公個投美。 然有的拉多：著年獲日臉海好、步研所時：了時教出起又情持劇水可但助高帶天三示足夫人節像情能功眾導流，斯龍因分路多；種的水工拿思直自上素，品故國著保？   著走亞特開神，城持此！風象者夫後交感那了一十有藝高電南可景，樣難方以女的種但油。',\r\n    direction: 'example4',\r\n    date: '2020-08-02',\r\n  },\r\n  {\r\n    from: '訊息E',\r\n    message:\r\n      '覺時費車音能中人出由差如接使鄉民？色談內坐在為高。型這於時地界年間上點在必作陸子舞不使：活人河時電分國的非。影間我個藝統回它反時然化實我原聯會人綠小等提你老看行下，什滿心位爭期輕間一雖園不負因適的眾春亮相實書我？  ',\r\n    direction: 'example5',\r\n    date: '2020-10-02',\r\n  },\r\n];\r\n","import React from 'react';\nimport MessageList from './MessageList';\nimport MessageText from './MessageText';\nimport {Route, Switch} from 'react-router-dom';\nimport UseClickToDir from './hooks/UseClickToDir';\nimport UseMessageState from './hooks/UseMessageState';\nimport {example} from './example';\nimport './App.css';\n\nfunction MessageBox() {\n  const [messageState, SortByRecentDate, SortByOlderDate] = UseMessageState(\n    example\n  );\n  const [message, SetMessageStateWithLink] = UseClickToDir({\n    message: '',\n    direction: '',\n  });\n  const appContainer = {\n    maxidth: '100vw',\n    height: '100vh',\n    padding: '0',\n    margin: 'auto',\n    maxHeight: '100vh',\n    overflowY: 'scroll',\n  };\n  return (\n    <Switch>\n      <Route\n        exact\n        path='/MessageBox/'\n        render={() => {\n          return (\n            <div style={appContainer}>\n              <MessageList\n                SortByRecentDate={SortByRecentDate}\n                SortByOlderDate={SortByOlderDate}\n                example={messageState}\n                SetMessageStateWithLink={SetMessageStateWithLink}\n                message={message}\n              />\n              <MessageText\n                message={\n                  '您可以點擊左方訊息列表，並觀察網址的變化, You may click on the messages on the right and see if the url changes'\n                }\n              />\n            </div>\n          );\n        }}\n      />\n      {messageState.map((ele) => (\n        <Route\n          key={ele.direction}\n          exact\n          path={`/MessageBox/${ele.direction}/`}\n          render={() => {\n            return (\n              <div style={appContainer}>\n                <MessageList\n                  SortByOlderDate={SortByOlderDate}\n                  SortByRecentDate={SortByRecentDate}\n                  SetMessageStateWithLink={SetMessageStateWithLink}\n                  example={messageState}\n                />\n                <MessageText message={ele.message} from={ele.from} />\n              </div>\n            );\n          }}\n        />\n      ))}\n    </Switch>\n  );\n}\n\nexport default MessageBox;\n","import {useState} from 'react';\r\n\r\nexport default (initialValue) => {\r\n  const [messageState, SetMessageState] = useState(initialValue);\r\n  const SortByRecentDate = () => {\r\n    const sorted = messageState.sort((a, b) => {\r\n      return new Date(b.date) - new Date(a.date);\r\n    });\r\n    SetMessageState([...sorted]);\r\n  };\r\n  const SortByOlderDate = () => {\r\n    const sorted = messageState.sort((a, b) => {\r\n      return new Date(a.date) - new Date(b.date);\r\n    });\r\n    SetMessageState([...sorted]);\r\n  };\r\n  return [messageState, SortByRecentDate, SortByOlderDate];\r\n};\r\n","import {useState} from 'react';\r\n\r\nexport default (initialValue) => {\r\n  const [clickToMessageState, SetMessageState] = useState(initialValue);\r\n  const ClickToMessage = (value) => {\r\n    SetMessageState(value);\r\n  };\r\n  return [clickToMessageState, ClickToMessage];\r\n};\r\n","import uuid from 'react-uuid';\r\nimport {ADD_MESSAGE, EDIT_MESSAGE, DELETE_MESSAGE} from './constants';\r\n\r\n//MessageState Here\r\nconst initialMessageState = {\r\n  message: [\r\n    {\r\n      id: '1',\r\n      text:\r\n        '這個留言板利用了Redux進行state management，您可以留言、回覆留言、甚至是刪除留言。',\r\n    },\r\n    {\r\n      id: '2',\r\n      text:\r\n        'This comment section is using Redux and hooks to manage its state, you may leave, reply or even delete comments!',\r\n    },\r\n  ],\r\n};\r\n\r\nexport const MessageBoardReducer = (\r\n  state = initialMessageState,\r\n  action = {}\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      const addedMessage = {id: uuid(), text: action.payload};\r\n      return {...state, message: [...state.message, addedMessage]};\r\n    case EDIT_MESSAGE:\r\n      const editedMessage = action.payload.editedText;\r\n      const editTarget = state.findIndex(\r\n        (message) => message.id === action.payload.target\r\n      );\r\n      state[editTarget].text = editedMessage;\r\n      return {...state, message: state.message};\r\n    case DELETE_MESSAGE:\r\n      const deletedMessage = state.message.filter(\r\n        (message) => message.id !== action.payload\r\n      );\r\n      return {...state, message: deletedMessage};\r\n\r\n    default:\r\n      return {...state};\r\n  }\r\n};\r\n","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nconst Header = ({position}) => {\r\n  return (\r\n    <div\r\n      className={`container-fluid  position-${position}  p-0`}\r\n      style={{top: '0', backgroundColor: 'rgba(255, 255, 255,0.5)'}}\r\n    >\r\n      <ul\r\n        className=' text-center p-2 mx-auto my-0 '\r\n        style={{listStyle: 'none'}}\r\n      >\r\n        <NavLink\r\n          exact\r\n          activeClassName='activenav '\r\n          className='d-inline-block m-auto p-xs-1 p-3 section nav'\r\n          to='/'\r\n        >\r\n          <li className=''>Home</li>{' '}\r\n        </NavLink>{' '}\r\n        <NavLink\r\n          exact\r\n          activeClassName='activenav'\r\n          className='d-inline-block m-auto p-xs-1 p-3 section nav'\r\n          to='/todolist'\r\n        >\r\n          <li>Todo List</li>{' '}\r\n        </NavLink>\r\n        <NavLink\r\n          exact\r\n          activeClassName='activenav'\r\n          className='d-inline-block m-auto p-xs-1 p-3 section nav'\r\n          to='/lightsout'\r\n        >\r\n          <li>lightsout</li>{' '}\r\n        </NavLink>\r\n        <NavLink\r\n          exact\r\n          activeClassName='activenav'\r\n          className='d-inline-block m-auto p-xs-1 p-3 section nav'\r\n          to='/blogpost'\r\n        >\r\n          <li>BlogPost</li>\r\n        </NavLink>\r\n        <NavLink\r\n          exact\r\n          activeClassName='activenav'\r\n          className='d-inline-block m-auto p-xs-1 p-3 section nav'\r\n          to='/Comment'\r\n        >\r\n          <li>Comment</li>\r\n        </NavLink>\r\n        <NavLink\r\n          exact\r\n          activeClassName='activenav'\r\n          className='d-inline-block m-auto p-xs-1 p-3 section nav'\r\n          to='/MessageBox'\r\n        >\r\n          <li>MessageBox</li>\r\n        </NavLink>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport {Switch, Route, Link} from 'react-router-dom';\r\n//Components\r\nimport Main from './Main';\r\nimport LightsOut from './LightsOut/LightsOut';\r\nimport TodoListApp from './TodoList/TodoListApp';\r\nimport TodoListHookedApp from './TodoListHooked/TodoListHookedApp';\r\nimport BlogPost from './BlogPost/BlogPost';\r\nimport Comment from './Comment/Comment';\r\nimport MessageBox from './MessageBox/MessageBox';\r\n//Redux\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport {MessageBoardReducer} from './Comment/redux/reducers';\r\n//CSS\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from './Header';\r\n\r\n//store\r\nconst commentStore = createStore(MessageBoardReducer);\r\n\r\n//Using reactrouter to route the site\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleleave = this.handleleave.bind(this);\r\n  }\r\n  handleleave = () => {\r\n    document.querySelector('#popup').style.display = 'none';\r\n  };\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => (\r\n            <div>\r\n              <Header position={'absolute'} />\r\n              <Main />\r\n            </div>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path='/TodoList'\r\n          render={() => (\r\n            <div>\r\n              <Header position={'relative'} />\r\n              <TodoListApp handleleave={this.handleleave} />\r\n            </div>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path='/TodoListHooked'\r\n          render={() => (\r\n            <div>\r\n              <Header position={'relative'} />\r\n              <TodoListHookedApp handleleave={this.handleleave} />\r\n            </div>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path='/LightsOut'\r\n          render={() => (\r\n            <div>\r\n              <Header position={'relative'} />\r\n              <LightsOut handleleave={this.handleleave} />\r\n            </div>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path='/BlogPost'\r\n          render={() => (\r\n            <div>\r\n              <Header position={'relative'} />\r\n              <BlogPost handleleave={this.handleleave} />\r\n            </div>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path='/Comment'\r\n          render={() => (\r\n            <div>\r\n              <Header position={'relative'} />\r\n              <Provider store={commentStore}>\r\n                <Comment handleleave={this.handleleave} />\r\n              </Provider>\r\n            </div>\r\n          )}\r\n        />\r\n        <Route\r\n          path='/MessageBox/'\r\n          render={() => (\r\n            <div>\r\n              <Header position={'relative'} />\r\n              <MessageBox handleleave={this.handleleave} />\r\n            </div>\r\n          )}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//the reason I use HashRouter is because github page only supports HashRouter instead of browser router\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/headshot.785530ea.png\";"],"sourceRoot":""}